{
"version":3,
"file":"test_monkee_bugger.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/GIT/monkee-z/src/MonkeeBuggerTest.hx","/Users/matthijs/Documents/GIT/monkee-z/src/App.hx","/usr/local/lib/haxe/std/haxe/Timer.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport js.Syntax;\nimport js.html.Element;\nimport haxe.Json;\nimport js.Browser.*;\n\nusing StringTools;\nusing Lambda;\n\nclass MonkeeBuggerTest {\n\tvar isDebug = true;\n\tvar DEBUG = true;\n\n\tpublic function new() {\n\t\tif (DEBUG)\n\t\t\tconsole.log('${App.NAME} - MonkeeBugger - ${App.getBuildDate()}');\n\n\t\tfor (i in 0...10) {\n\t\t\thaxe.Timer.delay(() -> {\n\t\t\t\tconsole.log('test ${i} in ${i * 1000}ms');\n\t\t\t}, i * 1000);\n\t\t}\n\n\t\tconsole.log('log');\n\t\tconsole.warn('warn');\n\t\tconsole.error('error');\n\t\tconsole.info('info');\n\n\t\tconsole.log('deel 1/2', 'deel 2/2');\n\t\tconsole.log('part 1/3', 'part 2/3', 'part 3/3');\n\n\t\tvar obj = {prop1: 'prop1Value', prop2: 'prop2Value', child: {childProp1: 'childProp1Value'}}\n\t\tconsole.log(obj);\n\n\t\ttrace('trace');\n\t}\n\n\tstatic public function main() {\n\t\tdocument.addEventListener('DOMContentLoaded', (event) -> {\n\t\t\tvar app = new MonkeeBuggerTest();\n\t\t});\n\t}\n}\n","import haxe.macro.Context;\n\nclass App {\n\tpublic static inline var URL:String = \"https://\";\n\n\tpublic static inline var NAME:String = \"[Monkee-Z]\";\n\n\t/**\n\t * @example\n\t * \t\tconsole.log(App.callIn('MonkeeRoute'));\n\t *\n\t * @param str\n\t */\n\tpublic static inline function callIn(str:String) {\n\t\treturn '${NAME} - ${str} - build: ${App.getBuildDate()}';\n\t}\n\n\tpublic static inline macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tThe `Timer` class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the `Timer` class with a given\n\tinterval, set its `run()` method to a custom function to be invoked and\n\teventually call `stop()` to stop the `Timer`.\n\n\tNote that a running `Timer` may or may not prevent the program to exit\n\tautomatically when `main()` returns.\n\n\tIt is also possible to extend this class and override its `run()` method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js)\n\tprivate var id:Null<Int>;\n\t#elseif (java && !jvm)\n\tprivate var timer:java.util.Timer;\n\tprivate var task:java.util.TimerTask;\n\t#else\n\tprivate var event:MainLoop.MainEvent;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new(time_ms:Int) {\n\t\t#if flash\n\t\tvar me = this;\n\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() {\n\t\t\tme.run();\n\t\t}, time_ms);\n\t\t#elseif js\n\t\tvar me = this;\n\t\tid = untyped setInterval(function() me.run(), time_ms);\n\t\t#elseif (java && !jvm)\n\t\ttimer = new java.util.Timer();\n\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#else\n\t\tvar dt = time_ms / 1000;\n\t\tevent = MainLoop.add(function() {\n\t\t\t@:privateAccess event.nextRun += dt;\n\t\t\trun();\n\t\t});\n\t\tevent.delay(dt);\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\tif (id == null)\n\t\t\treturn;\n\t\t#if flash\n\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t#elseif js\n\t\tuntyped clearInterval(id);\n\t\t#end\n\t\tid = null;\n\t\t#elseif (java && !jvm)\n\t\tif (timer != null) {\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t}\n\t\ttask = null;\n\t\t#else\n\t\tif (event != null) {\n\t\t\tevent.stop();\n\t\t\tevent = null;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\n\t\t```haxe\n\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\ttimer.run = function() { ... }\n\t\t```\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its `run()` method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is `null`, the result is unspecified.\n\t**/\n\tpublic static function delay(f:Void->Void, time_ms:Int) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\t`Timer.stamp()` before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to `Log.trace()`, with `\"s\"` appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is `null`, the result is unspecified.\n\t**/\n\tpublic static function measure<T>(f:Void->T, ?pos:PosInfos):T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static inline function stamp():Float {\n\t\t#if flash\n\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif js\n\t\t#if nodejs\n\t\tvar hrtime = js.Syntax.code('process.hrtime()'); // [seconds, remaining nanoseconds]\n\t\treturn hrtime[0] + hrtime[1] / 1e9;\n\t\t#else\n\t\treturn @:privateAccess HxOverrides.now() / 1000;\n\t\t#end\n\t\t#elseif cpp\n\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif python\n\t\treturn Sys.cpuTime();\n\t\t#elseif sys\n\t\treturn Sys.time();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t}\n}\n\n#if (java && !jvm)\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;;eAUA;AAAA,EAEa,AAAZ,aAAY;AAFb,EAKE,EAAI,aACH;AAAA,uBAAa,eAAW,uBCIV;ADJd;AANH,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,IAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAU,OAAK;AAArC,IACM;AAXV,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EASG,iBAAiB,WAChB;AAAA,uBAAa,UAAO,IAAE,SAAM,OAAS;AAArC,IACE;AAXN,EAcE,oBAAa;AAdf,EAeE,qBAAc;AAfhB,EAgBE,sBAAe;AAhBjB,EAiBE,qBAAc;AAjBhB,EAmBE,oBAAa,WAAY;AAnB3B,EAoBE,oBAAa,WAAY,WAAY;AApBvC,EAsBE,UAAU,UAAS,sBAAqB,sBAAoB,eAAc;AAtB5E,EAuBE,oBAAY;AAvBd,EAyBE,0CAAO;AAzBT;eA6BE;AAAA,mCAA2B,mBAAmB,gBAC7C;AAAA,aAAU;AAAV;AADD;;;sBEoBgC;AAAA,EAOhC,SAAS;AAPuB,EAQhC,UAAa,YAAY,WAAW;AAAA;AAAA,IAAU;AARd;QA8BV;AAAA,EAEtB,EAAI,YAAM,MACT;AAAA;AAAA;AAHqB,EAOd,cAAc;AAPA,EAStB,UAAK;AATiB;OAsCO;AAAA;yBAW0B;AAAA,EACvD,QAAQ,eAAe;AADgC,EAEvD,QAAQ,WAAW;AAAA,GAClB;AADkB,GAElB;AAFkB;AAFoC,EAMvD,OAAO;AANgD;;;oBC/GzD;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;;;"
}