// Generated by Haxe 4.1.5
(function ($hx_exports, $global) { "use strict";
class MonkeeUtil {
	constructor() {
		$global.console.info("[monkee]" + " - " + "MonkeeUtil" + " - build: " + "2021-04-21 08:25:39");
		this.init();
	}
	init() {
		let all = window.document.querySelectorAll("[data-escape]");
		let _g = 0;
		let _g1 = all.length;
		while(_g < _g1) {
			let i = _g++;
			let el = all[i];
			let html = el.getAttribute("data-escape");
			el.innerHTML = MonkeeUtil.escapeHTML(html);
		}
	}
	static embedCode(id,filename) {
		$global.console.info("[monkee]" + " - " + "MonkeeUtil :: embedCode" + " - build: " + "2021-04-21 08:25:39");
		let link = window.document.createElement("link");
		link.rel = "stylesheet";
		link.href = "//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css";
		window.document.body.appendChild(link);
		let link1 = window.document.createElement("link");
		link1.rel = "stylesheet";
		link1.href = "https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/monokai-sublime.min.css";
		window.document.body.appendChild(link1);
		let script = window.document.createElement("script");
		script.src = "//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js";
		window.document.body.appendChild(script);
		let app = new MonkeeChain("" + id,{ data : { js : "", code : "test"}, template : function(data) {
			return "\n\t\t        <div class=\"copy-code-wrapper-" + id + "\" style=\"position:relative;\">\n\t\t        <textarea id=\"copy-code-input-" + id + "\" style=\"position:fixed;top:-100px;\">" + data.code + "</textarea>\n\t\t        <pre style=\"border-radius:4px;\"><code class=\"js\">" + data.js + "</code></pre>\n\t\t        <button class=\"btn\" id=\"copy-code-btn-" + id + "\" style=\"position: absolute; top: 15px; right: 15px;\">ðŸ“‹</button>\n\t\t        </div>\n\t\t        ";
		}});
		let setButton = function() {
			let wrapper = window.document.getElementById("copy-code-wrapper-" + id);
			let btn = window.document.getElementById("copy-code-btn-" + id);
			btn.classList.add("btn-light");
			let input = window.document.getElementById("copy-code-input-" + id);
			input.setAttribute("style","position:fixed;top:-100px;");
			btn.onclick = function(e) {
				e.preventDefault();
				input.select();
				window.document.execCommand("copy");
				window.alert("code is copied");
			};
		};
		setButton();
		window.fetch("" + filename).then(function(response) {
			return response.text();
		}).then(function(data) {
			app.data.code = data;
			let tmp = StringTools.replace(StringTools.replace(StringTools.replace(data,"&","&amp;"),"\"","&quot;"),"<","&lt;");
			app.data.js = StringTools.replace(tmp,">","&gt;");
			app.render();
			window.setTimeout(function() {
				hljs.highlightAll();
				setButton();
			},500);
		});
	}
	static escapeHTML(html) {
		return StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(html,"&","&amp;"),"\"","&quot;"),"<","&lt;"),">","&gt;");
	}
	static main() {
		window.document.addEventListener("DOMContentLoaded",function(event) {
			let app = new MonkeeUtil();
		});
	}
}
$hx_exports["MonkeeUtil"] = MonkeeUtil;
class StringTools {
	static replace(s,sub,by) {
		return s.split(sub).join(by);
	}
}
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
MonkeeUtil.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=monkee_util.js.map