{
"version":3,
"file":"monkee_react.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijskamstra/Documents/GIT/monkee-z/src/MonkeeReact.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport js.Browser.*;\nimport js.Browser;\nimport js.html.*;\n\nclass MonkeeReact {\n\tvar DEBUG = false;\n\n\tpublic function new() {\n\t\tdocument.addEventListener('DOMContentLoaded', (event) -> {\n\t\t\tif (DEBUG)\n\t\t\t\tconsole.info(App.callIn('MonkeeReact'));\n\t\t});\n\n\t\tvar arr = document.querySelectorAll('[data-wrapper]');\n\t\tfor (i in 0...arr.length) {\n\t\t\tvar wrapper:Element = cast arr[i];\n\t\t\tvar wrapperName = (wrapper.getAttribute('data-wrapper'));\n\t\t\t// get all data-in from wrapper\n\t\t\tvar dataOutArr = wrapper.querySelectorAll('[data-out]');\n\t\t\t// for (j in 0...dataOutArr.length) {\n\t\t\t// \tvar el = dataOutArr[j];\n\t\t\t// \tif(DEBUG)trace(el);\n\t\t\t// }\n\t\t\t// get all data-out from wrapper\n\t\t\tvar dataInArr = wrapper.querySelectorAll('[data-in]');\n\t\t\tfor (j in 0...dataInArr.length) {\n\t\t\t\tvar el:Element = cast dataInArr[j];\n\t\t\t\tel.onkeypress = function(e:KeyboardEvent) {\n\t\t\t\t\tvar key = (e.key);\n\t\t\t\t\tvar value = untyped e.target.value; // cast will add to much haxe stuff to the output\n\t\t\t\t\tvar total = '${value}${key}';\n\t\t\t\t\tfor (i in 0...dataOutArr.length) {\n\t\t\t\t\t\tvar el:Element = cast dataOutArr[i];\n\t\t\t\t\t\tel.innerText = total;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new MonkeeReact();\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;;eAMA;AAAA,EACa,AAAZ,aAAY;AADb,EAGC;AAHD,EAIE,iCAA2B,mBAAmB,gBAC7C;AAAA,KAAI,eACH;AAAA,yBAAa,qBAAY,gBAAZ;AAAb;AADD;AALH,EASE,UAAU,iCAA2B;AATvC,EAUY;AAVZ,EAUgB;AAVhB,EAUE,KAAK,CAAK,KAAI,KAAd;AAAA,GAAU;AAAV,GACC,cAAsB,AAAK,IAAI;AADhC,GAEC,kBAAkB,AAAC,qBAAsB;AAF1C,GAIC,iBAAiB,yBAA0B;AAJ5C,GAUC,gBAAgB,yBAA0B;AAV3C,GAWW;AAXX,GAWe;AAXf,GAWC,KAAK,CAAK,MAAI,KAAd;AAAA,IAAU;AAAV,IACC,SAAiB,AAAK,UAAU;AADjC,IAEC,gBAAgB,YAA0B;AAAA,KACzC,UAAU,AAAC;AAD8B,KAEzC,YAAoB;AAFqB,KAGzC,YAAa,KAAE,QAAQ;AAHkB,KAI/B;AAJ+B,KAI3B;AAJ2B,KAIzC,KAAK,CAAK,KAAI,KAAd;AAAA,MAAU;AAAV,MACC,SAAiB,AAAK,WAAW;AADlC,MAEC,eAAe;AAFhB;AAJyC;AAF3C;AAXD;AAVF;eAqCE;AAAA,YAAU;AAAV;;;oBChBF;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;;;"
}