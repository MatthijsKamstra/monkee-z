{
"version":3,
"file":"monkee_db.js",
"sourceRoot":"",
"sources":["file:////usr/local/lib/haxe/std/js/_std/HxOverrides.hx","file:////Users/matthijs/Documents/GIT/monkee-z/src/MonkeeDB.hx","file:////usr/local/lib/haxe/std/js/_std/Reflect.hx","file:////usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx","file:////usr/local/lib/haxe/std/js/_std/Std.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\tstatic function dateStr(date:Date):String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\n\t}\n\n\tstatic function strDate(s:String):Date {\n\t\tswitch (s.length) {\n\t\t\tcase 8: // hh:mm:ss\n\t\t\t\tvar k = s.split(\":\");\n\t\t\t\tvar d = js.Syntax.construct(Date);\n\t\t\t\t(cast d)[cast \"setTime\"](0);\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\n\t\t\t\treturn d;\n\t\t\tcase 10: // YYYY-MM-DD\n\t\t\t\tvar k = s.split(\"-\");\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\t\tvar k = s.split(\" \");\n\t\t\t\tvar y = k[0].split(\"-\");\n\t\t\t\tvar t = k[1].split(\":\");\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca(s:String, index:Int):Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif (x != x) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0)\n\t\t\t\ti = 0;\n\t\t}\n\t\twhile (i < len) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>(a:Array<T>, obj:T) {\n\t\tvar i = a.indexOf(obj);\n\t\tif (i == -1)\n\t\t\treturn false;\n\t\ta.splice(i, 1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\n\t\tuntyped {\n\t\t\treturn {\n\t\t\t\tcur: 0,\n\t\t\t\tarr: a,\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\", \"closure_read.keyValueIterator\")\n\tstatic function keyValueIter<T>( a : Array<T> ) {\n\t\treturn new haxe.iterators.ArrayKeyValueIterator(a);\n\t}\n\n\t@:pure\n\tstatic function now(): Float return js.lib.Date.now();\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__('HxOverrides.indexOf',\n\t\t\t\tif (Array.prototype.indexOf) js.Syntax.code(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\n\t\t\t__feature__('HxOverrides.lastIndexOf',\n\t\t\t\tif (Array.prototype.lastIndexOf) js.Syntax.code(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\n\t\t\t#end\n\n\t\t\t__feature__('HxOverrides.now',\n\t\t\t\tif (js.Syntax.typeof(performance) != 'undefined' && js.Syntax.typeof(performance.now) == 'function') {\n\t\t\t\t\tHxOverrides.now = performance.now.bind(performance);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n}\n","package;\n\nimport haxe.Json;\nimport haxe.Constraints.Function;\nimport gui.*;\nimport js.Browser.*;\nimport js.html.*;\n\n@:expose\nclass MonkeeDB {\n\tstatic var isDebug = true;\n\tstatic var json:Dynamic;\n\n\t// CRUD: Create Read Update Delete\n\tpublic function new() {}\n\n\t// create\n\n\t/**\n\t * create the database or get the previous information\n\t *\n\t * if (isOverwrite == false) the 'database' is not created and not overwritten\n\t *\n\t * @param name\t\t\tdataBase name\n\t * @param isOverwrite\tpossible to reset the database/overwrite with new default data\n\t */\n\tpublic static function create(name:String, ?isOverwrite:Bool = false) {\n\t\tif (isDebug)\n\t\t\tconsole.info(\"get local storage\");\n\n\t\tjson = Json.parse(window.localStorage.getItem(name));\n\t\t// if (isDebug) console.info(json);\n\t\tif (json == null || isOverwrite) {\n\t\t\tjson = {\n\t\t\t\t_id: 'localdata-${Date.now().getTime()}',\n\t\t\t\tversion: '0.0.1',\n\t\t\t\tcreated: Date.now().toString(),\n\t\t\t\tupdated: Date.now().toString(),\n\t\t\t}\n\t\t\t// window.localStorage.setItem(name, Json.stringify(json));\n\n\t\t\tif (isDebug) {\n\t\t\t\tconsole.log('initialize database:' + Json.stringify(json));\n\t\t\t}\n\t\t}\n\n\t\tsaveData(name);\n\t}\n\n\t// read\n\n\t/**\n\t * read/load data from \"database\", send key and get specific data\n\t *\n\t * @example\n\t * \t\t\t\tvar json = LocalData.read('databaseName'); // get whole json\n\t * \t\t\t\tvar version = LocalData.read('databaseName', 'version'); // version from json (untyped)\n\t *\n\t * @param name\t\t\tdataBase name\n\t * @param key\t\t\t(optional) key to get from json\n\t * @return Dynamic\t\tjson/object or null\n\t */\n\tpublic static function read(name:String, ?key:String) {\n\t\tif (json == null) {\n\t\t\tjson = Json.parse(window.localStorage.getItem(name));\n\t\t}\n\n\t\tif (key == null) {\n\t\t\treturn json;\n\t\t}\n\n\t\tif (Reflect.hasField(json, key)) {\n\t\t\treturn Reflect.getProperty(json, key);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * load data (syntactic sugar for read without a key param)\n\t *\n\t * @example\n\t * \t\t\t\tvar json = LocalData.load('databaseName'); // get json\n\t *\n\t * @param name\t\t\tdataBase name\n\t * @param key\t\t\t(optional) key to get from json\n\t * @return Dynamic\t\tjson/object or null\n\t */\n\tpublic static function load(name:String):Dynamic {\n\t\tif (json == null) {\n\t\t\tjson = Json.parse(window.localStorage.getItem(name));\n\t\t}\n\t\tif (json == null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn json;\n\t\t}\n\t}\n\n\t// update\n\n\t/**\n\t * update data (essential overwriting data: be careful with arrays and object)\n\t *\n\t * in the process the `updated` is updated to current date\n\t *\n\t * @example\n\t * \t\t\t\tvar json = LocalData.update('databaseName', 'test', 'foo');\n\t *\n\t * @param name\t\t\tdataBase name\n\t * @param key\t\t\t(optional) key to get from json\n\t * @param value\n\t */\n\tpublic static function update(name:String, key:String, value:Dynamic) {\n\t\tif (json == null) {\n\t\t\tjson = Json.parse(window.localStorage.getItem(name));\n\t\t}\n\n\t\t// if (Reflect.hasField(json, key)) {\n\t\tReflect.setProperty(json, key, value);\n\t\tReflect.setProperty(json, 'updated', Date.now().toString());\n\t\t// }\n\n\t\tsaveData(name);\n\t}\n\n\t// delete\n\n\t/**\n\t * [Description]\n\t * @example\n\t * \t\t\t\tvar json = LocalData.delete('databaseName', 'test');\n\t *\n\t * @param name\t\t\tdataBase name\n\t * @param key\t\t\t(optional) key to get from json\n\t */\n\tpublic static function delete(name:String, key:String) {\n\t\tif (json == null) {\n\t\t\tjson = Json.parse(window.localStorage.getItem(name));\n\t\t}\n\n\t\tif (Reflect.hasField(json, key)) {\n\t\t\tReflect.deleteField(json, key);\n\t\t}\n\n\t\tsaveData(name);\n\t}\n\n\t/**\n\t * remove localStorage with (db)Name\n\t *\n\t * @param name\t\t\tdataBase name\n\t */\n\tpublic static function clear(name:String) {\n\t\tjson = null;\n\t\twindow.localStorage.removeItem(name);\n\t\tif (isDebug)\n\t\t\tconsole.log('cleared data \"$name\"');\n\t}\n\n\t// ____________________________________ private ____________________________________\n\n\tprivate static function saveData(name:String) {\n\t\twindow.localStorage.setItem(name, Json.stringify(json));\n\t\tif (isDebug)\n\t\t\tconsole.log(json);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\t@:pure\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\n\t}\n\n\t@:pure\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\n\t\ttry\n\t\t\treturn o[cast field]\n\t\tcatch (e:Dynamic)\n\t\t\treturn null;\n\t}\n\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\n\t\to[cast field] = value;\n\t}\n\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\n\t\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\n\t\t}\n\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\n\t\t\t\to[tmp](value)\n\t\t\telse\n\t\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\n\t\t}\n\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\n\t\treturn (cast func : js.lib.Function).apply(o, args);\n\t}\n\n\tpublic static function fields(o:Dynamic):Array<String> {\n\t\tvar a = [];\n\t\tif (o != null)\n\t\t\tuntyped {\n\t\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\n\t\t\t\tjs.Syntax.code(\"for( var f in o ) {\");\n\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\n\t\t\t\t\ta.push(f);\n\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t}\n\t\treturn a;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isFunction(f:Dynamic):Bool {\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>(a:T, b:T):Int {\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\n\t\tif (f1 == f2)\n\t\t\treturn true;\n\t\tif (!isFunction(f1) || !isFunction(f2))\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isObject(v:Dynamic):Bool {\n\t\tif (v == null)\n\t\t\treturn false;\n\t\tvar t = js.Syntax.typeof(v);\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue(v:Dynamic):Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\n\t\tif (!hasField(o, field))\n\t\t\treturn false;\n\t\tjs.Syntax.delete(o, field);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\n\t\tif (o == null)\n\t\t\treturn null;\n\t\tvar o2:Dynamic = {};\n\t\tfor (f in Reflect.fields(o))\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function(f:Array<Dynamic>->Void):Dynamic {})\n\tpublic static function makeVarArgs(f:Array<Dynamic>->Dynamic):Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(js.Syntax.code(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\t@:deprecated('Std.is is deprecated. Use Std.isOfType instead.')\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n"],
"names":[],
"mappings":"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"
}