{
"version":3,
"file":"monkee_util.js",
"sourceRoot":"",
"sources":["file:////Users/matthijs/Documents/GIT/monkee-z/src/MonkeeUtil.hx","file:////Users/matthijs/Documents/GIT/monkee-z/src/App.hx","file:////usr/local/lib/haxe/std/js/_std/Std.hx","file:////usr/local/lib/haxe/std/StringTools.hx","file:////usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx","file:////Users/matthijs/Documents/GIT/monkee-z/src/utils/Sanitize.hx"],
"sourcesContent":["package;\n\nimport haxe.Constraints.Function;\nimport utils.Sanitize;\nimport js.html.Element;\nimport js.html.InputElement;\nimport js.Browser.*;\n\nusing StringTools;\n\nimport externs.MonkeeChain;\n\n@:expose\n@:keep\nclass MonkeeUtil {\n\t/**\n\t * 0.0.8\tauto embedCode\n\t * 0.0.7\tsimplere version embedCode\n\t * 0.0.6\tversion and debug\n\t * 0.0.5 \tmdTable2HTMLTable (WIP)\n\t * 0.0.4 \tsetLink/setScript\n\t * 0.0.3 \tembedSpecs\n\t * 0.0.2\tembedCode\n\t * 0.0.1 \tinitial, data-escape on dataload\n\t */\n\tstatic inline var VERSION = '0.0.8';\n\n\tvar DEBUG = #if debug true #else false #end;\n\n\tpublic function new() {\n\t\tconsole.info(App.callIn('Util', VERSION));\n\t\tinit();\n\t\tautoEmbedCode();\n\t}\n\n\tfunction autoEmbedCode() {\n\t\tvar all = document.querySelectorAll('[data-monkee-code]');\n\t\tfor (i in 0...all.length) {\n\t\t\tvar el:Element = cast all[i];\n\t\t\tvar type = el.getAttribute('data-monkee-code');\n\t\t\tembedCode2(el, type);\n\t\t}\n\t}\n\n\tfunction embedCode2(el:Element, type:String) {\n\t\tconsole.info(App.callIn('Util :: embedCode2', MonkeeUtil.VERSION));\n\n\t\tif (el.id == \"\") {\n\t\t\tel.id = 'monkee-util-embed-' + Date.now().getTime() + '-${Std.random(10000)}-${Std.random(10000)}';\n\t\t}\n\n\t\tvar id = el.id;\n\n\t\t// get inner code\n\t\tvar _code = Sanitize.escapeHTML(el.getElementsByTagName('code')[0].innerHTML);\n\t\tvar spaced = _code.split('\\t').join('  ');\n\n\t\t// setup up highlight.js\n\t\tsetLink('//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css');\n\t\tsetLink('https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/monokai-sublime.min.css');\n\t\tsetScript('//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js');\n\n\t\t// Setup the component\n\t\tvar app = new MonkeeChain('#${id}', {\n\t\t\tdata: {\n\t\t\t\tcode: spaced,\n\t\t\t\tcodeEscaped: utils.Sanitize.escapeHTML(spaced),\n\t\t\t\tcodeType: type\n\t\t\t},\n\t\t\ttemplate: function(data) {\n\t\t\t\treturn '\n\t\t        <div class=\"copy-code-wrapper-${id}\" style=\"position:relative;\" data-type=\"${data.codeType}\">\n\t\t        <textarea id=\"copy-code-input-${id}\" style=\"position:fixed;top:-100px;\">${data.code}</textarea>\n\t\t        <pre style=\"border-radius:4px;\"><code class=\"${data.codeType}\">${data.codeEscaped}</code></pre>\n\t\t        <button class=\"btn\" id=\"copy-code-btn-${id}\" style=\"position: absolute; top: 15px; right: 15px;\">ðŸ“‹</button>\n\t\t        </div>\n\t\t        ';\n\t\t\t}\n\t\t});\n\n\t\tfunction setButton() {\n\t\t\tvar wrapper:Element = document.getElementById('copy-code-wrapper-${id}');\n\t\t\tvar btn = document.getElementById('copy-code-btn-${id}');\n\t\t\tbtn.classList.add('btn-light');\n\t\t\t// console.log(btn);\n\n\t\t\tvar input:InputElement = cast document.getElementById('copy-code-input-${id}');\n\t\t\tinput.setAttribute('style', 'position:fixed;top:-100px;'); // console.log(input);\n\n\t\t\t// console.log(input.value);\n\n\t\t\tbtn.onclick = function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tuntyped input.select();\n\t\t\t\tdocument.execCommand('copy');\n\n\t\t\t\t// console.log('click');\n\t\t\t\twindow.alert('Code is copied');\n\n\t\t\t\t// var code = document.getElementById(`${id}`).querySelector('.hljs');\n\t\t\t\t// console.log(code);\n\t\t\t\t// code.classList.add('flash');\n\t\t\t};\n\t\t};\n\n\t\tsetButton(); // first try\n\t\t// window.setTimeout(function() {\n\t\t// \tuntyped hljs.highlightAll();\n\t\t// \tsetButton(); // second try\n\t\t// }, 500);\n\t};\n\n\tfunction init() {\n\t\tvar all = document.querySelectorAll('[data-escape]');\n\n\t\tfor (i in 0...all.length) {\n\t\t\tvar el:Element = cast all[i];\n\t\t\tvar html = el.getAttribute('data-escape');\n\t\t\t// el.innerHTML = (html);\n\t\t\t// el.innerText = MonkeeUtil.escapeHTML(html);\n\t\t\tel.innerHTML = Sanitize.escapeHTML(html);\n\t\t}\n\t}\n\n\t// ____________________________________ Monkee-Z ____________________________________\n\n\t/**\n\t * Json generated info on `build-release`\n\t *\n\t * @example\n\t * \t\t\tMonkeeUtil.mdTable2HTMLTable('#app', '../assets/json/monkee_load.md');\n\t *\n\t * @param id\t\t\telement to parse Monkee-Z Chain code in\n\t * @param filename\t\tthe file we want to use\n\t */\n\tpublic static function mdTable2HTMLTable(id:String, filename:String) {\n\t\tconsole.info(App.callIn('Util :: embedSpecs', MonkeeUtil.VERSION));\n\t\t// Setup the component\n\n\t\tfunction createTable(arr:Array<Dynamic>):String {\n\t\t\tvar html = '<table class=\"table table-striped table-sm\">';\n\t\t\tfor (i in 0...arr.length) {\n\t\t\t\tvar row:Array<Dynamic> = arr[i];\n\t\t\t\thtml += '<tr>';\n\t\t\t\tfor (j in 0...row.length) {\n\t\t\t\t\tvar col = row[j];\n\t\t\t\t\thtml += '<td>${col}<td>';\n\t\t\t\t}\n\t\t\t\thtml += '</tr>';\n\t\t\t}\n\t\t\thtml += \"<table>\";\n\t\t\treturn html;\n\t\t}\n\n\t\tvar app_markdown = new MonkeeChain('${id}', {\n\t\t\tdata: {\n\t\t\t\tmd: \"\",\n\t\t\t\tarr: [],\n\t\t\t},\n\t\t\ttemplate: function(props) {\n\t\t\t\treturn '\n\t        \t\t<div>${createTable(props.arr)}</div>\n\t        \t';\n\t\t\t},\n\t\t});\n\n\t\t// Fetch API data\n\t\twindow.fetch(\"../assets/md/monkee_load.md\").then(function(response) {\n\t\t\treturn response.text();\n\t\t}).then(function(data) {\n\t\t\t// console.log(data);\n\t\t\tvar arr = [];\n\t\t\tvar linesArr = data.split(\"\\n\");\n\t\t\tfor (i in 0...linesArr.length) {\n\t\t\t\tvar _linesArr = linesArr[i];\n\t\t\t\ttrace(_linesArr);\n\t\t\t\tif (i == 1)\n\t\t\t\t\tcontinue;\n\t\t\t\tvar line = linesArr[i];\n\t\t\t\t// console.log(line);\n\t\t\t\tvar col = line.split(\" | \");\n\t\t\t\t// console.log(col.length);\n\t\t\t\tif (col.length <= 1)\n\t\t\t\t\tcontinue;\n\t\t\t\tvar tempColArr = [];\n\t\t\t\tfor (j in 0...col.length) {\n\t\t\t\t\tvar val = col[j].replace(\"| \", \"\").replace(\" |\", \"\").replace('', \"\");\n\t\t\t\t\t// console.log(val);\n\t\t\t\t\ttempColArr.push(val);\n\t\t\t\t}\n\t\t\t\tarr.push(tempColArr);\n\t\t\t}\n\t\t\t// console.log(arr);\n\t\t\tapp_markdown.data.md = data;\n\t\t\tapp_markdown.data.arr = arr;\n\t\t\tapp_markdown.render();\n\t\t});\n\t}\n\n\t/**\n\t * Json generated info on `build-release`\n\t *\n\t * @example\n\t * \t\t\tMonkeeUtil.embedSpecs('#app', '../assets/json/monkee_load.json');\n\t *\n\t * @param id\t\t\telement to parse Monkee-Z Chain code in\n\t * @param filename\t\tthe file we want to use\n\t */\n\tpublic static function embedSpecs(id:String, filename:String) {\n\t\tconsole.info(App.callIn('Util :: embedSpecs', MonkeeUtil.VERSION));\n\n\t\t// Setup the component\n\t\tvar app = new MonkeeChain('${id}', {\n\t\t\tdata: {\n\t\t\t\tjson: {\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tupdated: \"\",\n\t\t\t\t\tsize: {\n\t\t\t\t\t\tminified: \"\",\n\t\t\t\t\t\toriginal: \"\",\n\t\t\t\t\t\tuglifyjs: \"\",\n\t\t\t\t\t},\n\t\t\t\t\turl: {\n\t\t\t\t\t\tminified: \"\",\n\t\t\t\t\t\toriginal: \"\",\n\t\t\t\t\t\tuglifyjs: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\ttemplate: function(props) {\n\t\t\t\treturn '\n                    <div class=\"card\">\n            \t\t\t<div class=\"card-body\">\n    \t\t\t\t\t\t<strong>File ${props.json.name}:</strong>\n    \t\t\t\t\t\t<p class=\"text-muted\">Updated: ${props.json.updated}</p>\n    \t\t\t\t\t\t<ul>\n    \t\t\t\t\t\t\t<li>Download original file: <a href=\"${props.json.url.original}\">${props.json.name.replace('.js', '.js')}</a> (${props.json.size.original})</li>\n    \t\t\t\t\t\t\t<li>UglifyJs file size: <a href=\"${props.json.url.uglifyjs}\">${props.json.name.replace('.js', '.min.js')}</a> (${props.json.size.uglifyjs})</li>\n    \t\t\t\t\t\t\t<li>Extra minified file size: <a href=\"${props.json.url.minified}\">${props.json.name.replace('.js', '.min.min.js')}</a> (${props.json.size.minified})</li>\n    \t\t\t\t\t\t</ul>\n    \t\t    \t    </div>\n    \t\t\t    </div>\n                    ';\n\t\t\t}\n\t\t});\n\n\t\t// Fetch API data\n\t\twindow.fetch('${filename}').then(function(response) {\n\t\t\treturn response.json();\n\t\t}).then(function(data) {\n\t\t\t// console.log(data);\n\t\t\tapp.data.json = data;\n\t\t\tapp.render();\n\t\t});\n\t}\n\n\t/**\n\t * Might want to revisit this script\n\t *\n\t * Embed js code into page, and a copy button for easy copy/paste\n\t *\n\t * It's possible to use the same in the code:\n\t *\n\t * ```html\n\t * \t<div id=\"js-twig-code\">\n\t * \t\t<pre><code>\n\t * \t\t\tsome code here\n\t * \t\t</code></pre>\n\t * \t</div>\n\t * ```\n\t *\n\t * @example\n\t * \t\t\tMonkeeUtil.embedCode('#app', 'test.js');\n\t * \t\t\tMonkeeUtil.embedCode('#js-twig-code');\n\t *\n\t * @param id\t\t\telement to parse Monkee-Z Chain code in\n\t * @param ?filename\t\tthe file we want to use\n\t */\n\tpublic static function embedCode(id:String, ?filename:String) {\n\t\tconsole.info(App.callIn('Util :: embedCode', MonkeeUtil.VERSION));\n\t\t// trace(id, filename);\n\n\t\tvar _code = '';\n\n\t\tif (filename == null) {\n\t\t\tvar _d = document.querySelector('${id}');\n\t\t\t// console.log(_d);\n\t\t\t_code = Sanitize.escapeHTML(_d.getElementsByTagName('code')[0].innerHTML);\n\n\t\t\t// console.log(_code);\n\t\t}\n\n\t\t// setup up highlight.js\n\t\tsetLink('//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css');\n\t\tsetLink('https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/monokai-sublime.min.css');\n\t\tsetScript('//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js');\n\n\t\t// Setup the component\n\t\tvar app = new MonkeeChain('${id}', {\n\t\t\tdata: {\n\t\t\t\tcode: \"test\",\n\t\t\t\tcodeEscaped: \"\",\n\t\t\t\tcodeType: \"js\"\n\t\t\t},\n\t\t\ttemplate: function(data) {\n\t\t\t\treturn '\n\t\t        <div class=\"copy-code-wrapper-${id}\" style=\"position:relative;\" data-type=\"${data.codeType}\">\n\t\t        <textarea id=\"copy-code-input-${id}\" style=\"position:fixed;top:-100px;\">${data.code}</textarea>\n\t\t        <pre style=\"border-radius:4px;\"><code class=\"${data.codeType}\">${data.codeEscaped}</code></pre>\n\t\t        <button class=\"btn\" id=\"copy-code-btn-${id}\" style=\"position: absolute; top: 15px; right: 15px;\">ðŸ“‹</button>\n\t\t        </div>\n\t\t        ';\n\t\t\t}\n\t\t});\n\n\t\tfunction setButton() {\n\t\t\tvar wrapper:Element = document.getElementById('copy-code-wrapper-${id}');\n\t\t\tvar btn = document.getElementById('copy-code-btn-${id}');\n\t\t\tbtn.classList.add('btn-light');\n\t\t\t// console.log(btn);\n\n\t\t\tvar input:InputElement = cast document.getElementById('copy-code-input-${id}');\n\t\t\tinput.setAttribute('style', 'position:fixed;top:-100px;'); // console.log(input);\n\n\t\t\t// console.log(input.value);\n\n\t\t\tbtn.onclick = function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tuntyped input.select();\n\t\t\t\tdocument.execCommand('copy');\n\n\t\t\t\t// console.log('click');\n\t\t\t\twindow.alert('Code is copied');\n\n\t\t\t\t// var code = document.getElementById(`${id}`).querySelector('.hljs');\n\t\t\t\t// console.log(code);\n\t\t\t\t// code.classList.add('flash');\n\t\t\t};\n\t\t};\n\n\t\tsetButton(); // first try\n\n\t\tif (filename != null) {\n\t\t\t// Fetch API data\n\t\t\twindow.fetch('${filename}')\n\t\t\t\t.then(function(response) {\n\t\t\t\t\treturn response.text();\n\t\t\t\t})\n\t\t\t\t.then(function(data) {\n\t\t\t\t\t// replace tabs with spaces for easier reading\n\t\t\t\t\tvar spaced = data.split('\\t').join('  ');\n\t\t\t\t\tapp.data.code = spaced;\n\t\t\t\t\tapp.data.codeEscaped = utils.Sanitize.escapeHTML(spaced);\n\t\t\t\t\tapp.data.codeType = filename.split('.')[filename.split('.').length - 1];\n\n\t\t\t\t\tapp.render();\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tuntyped hljs.highlightAll();\n\t\t\t\t\t\tsetButton(); // second try\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t} else {\n\t\t\tvar spaced = _code.split('\\t').join('  ');\n\t\t\tapp.data.code = spaced;\n\t\t\tapp.data.codeEscaped = utils.Sanitize.escapeHTML(spaced);\n\t\t\tapp.render();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tuntyped hljs.highlightAll();\n\t\t\t\tsetButton(); // second try\n\t\t\t}, 500);\n\t\t}\n\t};\n\n\t// ____________________________________ utils ____________________________________\n\n\tpublic static function setLink(href:String) {\n\t\tvar one = document.querySelector('[href=\"${href}\"]');\n\t\t// trace(one);\n\t\tif (one == null) {\n\t\t\t// trace('XXXXXXXX');\n\t\t\tvar link = document.createLinkElement();\n\t\t\tlink.rel = 'stylesheet';\n\t\t\tlink.href = '${href}';\n\t\t\tdocument.body.appendChild(link);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @example\n\t * \t\tsetScript('https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js');\n\t *\n\t * @param url \t\t\tload file from here\n\t * @param callback\t\twhen files is loaded use this function as callback\n\t */\n\tpublic static function setScript(src:String, ?callback:Function) {\n\t\tvar one = document.querySelector('[src=\"${src}\"]');\n\t\t// trace(one);\n\t\tif (one == null) {\n\t\t\tvar script = document.createScriptElement();\n\t\t\t// After the script is loaded (and executed), remove it\n\t\t\tscript.onload = function(e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\t//\tLib.nativeThis.remove();\n\t\t\t\tReflect.callMethod(callback, callback, []);\n\t\t\t};\n\t\t\tscript.src = src;\n\t\t\tdocument.body.appendChild(script);\n\t\t} else {\n\t\t\tif (callback != null) {\n\t\t\t\tReflect.callMethod(callback, callback, []);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic public function main() {\n\t\tdocument.addEventListener('DOMContentLoaded', (event) -> {\n\t\t\tvar app = new MonkeeUtil();\n\t\t});\n\t}\n}\n","import haxe.macro.Context;\n\nclass App {\n\tpublic static inline var URL:String = \"https://matthijskamstra.github.io/monkee-z/\";\n\n\tpublic static inline var NAME:String = \"[Monkee-Z]\";\n\n\t// events\n\tpublic static inline var ON_LOAD_READY:String = \"onLoadReady\";\n\tpublic static inline var ON_LOAD_UPDATE:String = \"onLoadUpdate\";\n\n\t/**\n\t * @example\n\t * \t\tconsole.log(App.callIn('MonkeeRoute'));\n\t *\n\t * @param str\t\tname for call out\n\t * @param version\tcurrent version for that class (use for release, debug gets current date)\n\t */\n\tpublic static inline function callIn(str:String, version:String) {\n\t\tvar _version = version;\n\t\t#if debug\n\t\t_version = App.getBuildDate();\n\t\t#end\n\t\treturn '${NAME} ${str} - version: ${_version}';\n\t}\n\n\tpublic static inline macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\t@:deprecated('Std.is is deprecated. Use Std.isOfType instead.')\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.StringIterator;\nimport haxe.iterators.StringKeyValueIterator;\n\n#if cpp\nusing cpp.NativeString;\n#end\n\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function(c) {\n\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static function postProcessUrlEncode(s:String):String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0, len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch (_charAt(s, i++)) {\n\t\t\t\tcase '+'.code:\n\t\t\t\t\tret.add('%20');\n\t\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\t\tvar c1 = _charAt(s, i++), c2 = _charAt(s, i++);\n\t\t\t\t\tswitch [c1, c2] {\n\t\t\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\t\t\tret.addChar('('.code);\n\t\t\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t\t}\n\t\t\t\tcase var chr:\n\t\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n\t#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\ttry\n\t\t\treturn java.net.URLDecoder.decode(s, \"UTF-8\")\n\t\tcatch (e:Dynamic)\n\t\t\tthrow e;\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"+\", \" \");\n\t\ts = lua.NativeStringTools.gsub(s, \"%%(%x%x)\", function(h) {\n\t\t\treturn lua.NativeStringTools.char(lua.Lua.tonumber(h, 16));\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \"\\r\\n\", \"\\n\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape(s:String, ?quotes:Bool):String {\n\t\tvar buf = new StringBuf();\n\t\tfor (code in #if neko iterator(s) #else new haxe.iterators.StringIteratorUnicode(s) #end) {\n\t\t\tswitch (code) {\n\t\t\t\tcase '&'.code:\n\t\t\t\t\tbuf.add(\"&amp;\");\n\t\t\t\tcase '<'.code:\n\t\t\t\t\tbuf.add(\"&lt;\");\n\t\t\t\tcase '>'.code:\n\t\t\t\t\tbuf.add(\"&gt;\");\n\t\t\t\tcase '\"'.code if (quotes):\n\t\t\t\t\tbuf.add(\"&quot;\");\n\t\t\t\tcase '\\''.code if (quotes):\n\t\t\t\t\tbuf.add(\"&#039;\");\n\t\t\t\tcase _:\n\t\t\t\t\tbuf.addChar(code);\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape(s:String):String {\n\t\treturn s.split(\"&gt;\")\n\t\t\t.join(\">\")\n\t\t\t.split(\"&lt;\")\n\t\t\t.join(\"<\")\n\t\t\t.split(\"&quot;\")\n\t\t\t.join('\"')\n\t\t\t.split(\"&#039;\")\n\t\t\t.join(\"'\")\n\t\t\t.split(\"&amp;\")\n\t\t\t.join(\"&\");\n\t}\n\n\t/**\n\t\tReturns `true` if `s` contains `value` and  `false` otherwise.\n\n\t\tWhen `value` is `null`, the result is unspecified.\n\t**/\n\tpublic static inline function contains(s:String, value:String):Bool {\n\t\t#if (js && js_es >= 6)\n\t\treturn (cast s).includes(value);\n\t\t#else \n\t\treturn s.indexOf(value) != -1;\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python || (js && js_es >= 6)) inline #end function startsWith(s:String, start:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0, start.bytes, 0, start.length << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.startswith(s, start);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).startsWith(start);\n\t\t#else\n\t\treturn (s.length >= start.length && s.lastIndexOf(start, 0) == 0);\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python || (js && js_es >= 6)) inline #end function endsWith(s:String, end:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.endswith(s, end);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).endsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn (slen >= elen && s.indexOf(end, (slen - elen)) == (slen - elen));\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace(s:String, pos:Int):Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length)\n\t\t\treturn false;\n\t\t#end\n\t\tvar c = s.charCodeAt(pos);\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, r)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0)\n\t\t\treturn s.substr(r, l - r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, l - r - 1)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0) {\n\t\t\treturn s.substr(0, l - r);\n\t\t} else {\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn (cast s : java.NativeString).trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tl -= s.length;\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\tbuf.add(s);\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tbuf.add(s);\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s` except the last one. If `by` is also the empty String `\"\"`, `s`\n\t\tremains unchanged.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace(s:String, sub:String, by:String):String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn (cast s : java.NativeString).replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex(n:Int, ?digits:Int) {\n\t\t#if flash\n\t\tvar n:UInt = n;\n\t\tvar s:String = untyped n.toString(16);\n\t\ts = s.toUpperCase();\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\tdo {\n\t\t\ts = hexChars.charAt(n & 15) + s;\n\t\t\tn >>>= 4;\n\t\t} while (n > 0);\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif (digits != null)\n\t\t\twhile (s.length < digits)\n\t\t\t\ts = \"0\" + s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function fastCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn (index < s.length) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn (cast(index, UInt) < s.length) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function unsafeCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn cast(_charAt(s, index), Int);\n\t\t#elseif cs\n\t\treturn cast(s[index], Int);\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an iterator of the char codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringIteratorUnicode`.\n\t**/\n\tpublic static inline function iterator(s:String):StringIterator {\n\t\treturn new StringIterator(s);\n\t}\n\n\t/**\n\t\tReturns an iterator of the char indexes and codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different of runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringKeyValueIteratorUnicode`.\n\t**/\n\tpublic static inline function keyValueIterator(s:String):StringKeyValueIterator {\n\t\treturn new StringKeyValueIterator(s);\n\t}\n\n\t/**\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t**/\n\t@:noUsing public static inline function isEof(c:Int):Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua || eval)\n\t\treturn c == null;\n\t\t#elseif (cs || java || python)\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteUnixArg() is deprecated. Use haxe.SysTools.quoteUnixArg() instead.')\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\treturn inline haxe.SysTools.quoteUnixArg(argument);\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.winMetaCharacters is deprecated. Use haxe.SysTools.winMetaCharacters instead.')\n\tpublic static var winMetaCharacters:Array<Int> = cast haxe.SysTools.winMetaCharacters;\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```haxe\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteWinArg() is deprecated. Use haxe.SysTools.quoteWinArg() instead.')\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\treturn inline haxe.SysTools.quoteWinArg(argument, escapeMetaCharacters);\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16\n\t\treturn (cast str : java.NativeString).charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\", \"url_encode\", 1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\", \"url_decode\", 1);\n\t#end\n\n\t#if utf16\n\tstatic inline var MIN_SURROGATE_CODE_POINT = 65536;\n\n\tstatic inline function utf16CodePointAt(s:String, index:Int):Int {\n\t\tvar c = StringTools.fastCodeAt(s, index);\n\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n\t\t\tc = ((c - 0xD7C0) << 10) | (StringTools.fastCodeAt(s, index + 1) & 0x3FF);\n\t\t}\n\t\treturn c;\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","package utils;\n\nimport Type.ValueType;\nimport haxe.Json;\n\nusing StringTools;\n\nclass Sanitize {\n\tpublic static var IS_DEBUG = false;\n\n\t/**\n\t * [Description]\n\t * @param json\n\t * @return Dynamic\n\t */\n\tpublic static function sanitizeJson(json:Dynamic):Dynamic {\n\t\tif (IS_DEBUG)\n\t\t\ttrace('---> sanitizeJson ${json}');\n\n\t\t// var res = Json.parse(Json.stringify(json));\n\t\tvar res = json;\n\t\tif (IS_DEBUG)\n\t\t\ttrace(res);\n\t\tfor (n in Reflect.fields(res)) {\n\t\t\t// trace(n);\n\t\t\t// trace(Reflect.field(res, n));\n\t\t\tvar key = n;\n\t\t\tvar value = Reflect.field(res, n);\n\t\t\tvar type:ValueType = Type.typeof(value);\n\n\t\t\tif (Std.isOfType(value, Int) || Std.isOfType(value, Float)) {\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace('numbers, don\\'t do anything');\n\t\t\t} else if (Std.isOfType(value, Bool)) {\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace('bool, don\\'t do anything');\n\t\t\t} else if (Std.isOfType(value, String)) {\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace('string, sanatize');\n\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace(res);\n\t\t\t\tReflect.setProperty(res, key, sanitizeHTML(value));\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace(res);\n\t\t\t} else if (Std.isOfType(value, Array)) {\n\t\t\t\t// Reflect.setProperty(res, key, sanitizeHTML(value));\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace('DO something clever with Array ${value}');\n\n\t\t\t\t// trace('\\n--> DO something clever with Array ${value}');\n\t\t\t\t// trace('\\n---> DO something clever with Array ${haxe.Json.parse(value)}');\n\n\t\t\t\t// Array<String> NOT Array<{}>\n\t\t\t\tvar _value:Array<Dynamic> = cast value;\n\t\t\t\t// untyped var value = value;\n\n\t\t\t\tfor (i in 0..._value.length) {\n\t\t\t\t\t// trace(\"i: \" + i);\n\t\t\t\t\t// trace(\"_value[i]: \" + _value[i]);\n\t\t\t\t\t// trace(\"_value: \" + value);\n\t\t\t\t\t// trace('TObject? (${_value[i]})--> ${Type.typeof(_value[i]) == TObject}');\n\t\t\t\t\tif (Type.typeof(_value[i]) == TObject) {\n\t\t\t\t\t\t// trace('---> ${_value[i]}');\n\t\t\t\t\t\t// trace('---> ${untyped value[i]}');\n\t\t\t\t\t\tSanitize.sanitizeJson(_value[i]);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t};\n\t\t\t\t\t_value[i] = sanitizeHTML(_value[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (IS_DEBUG)\n\t\t\t\t\ttrace('DO something clever with Object ${value}');\n\n\t\t\t\t// trace('\\n--> DO something clever with Object ${value}');\n\t\t\t\tSanitize.sanitizeJson(value);\n\t\t\t}\n\t\t\t// #if js\n\t\t\t// // import js.lib.Object;\n\t\t\t// trace('JS: ' + Std.isOfType(value, js.lib.Object));\n\t\t\t// #else\n\t\t\t// trace('NOT JS:  ${(Type.typeof(value) == TObject)}');\n\t\t\t// #end\n\n\t\t\t// trace('----------------------------');\n\t\t\t// trace('${key}: ${value} (${type})');\n\t\t\t// trace('${key}: ${Reflect.getProperty(res, key)}');\n\t\t\t// trace('----------------------------');\n\t\t\t// trace('----> Array ----> ' + Std.isOfType(value, Array));\n\t\t\t// // trace('----> \"array\" ----> ' + Std.isOfType(value, \"array\"));\n\t\t\t// // trace('----> Dynamic ----> ' + Std.isOfType(value, Dynamic));\n\t\t\t// trace('----> TObject ----> ' + Std.isOfType(value, TObject));\n\t\t\t// trace('----> {} ----> ' + Std.isOfType(value, {}));\n\t\t\t// trace('----> Object ----> ' + Std.isOfType(value, Object));\n\t\t\t// // trace('----> Any ----> ' + Std.isOfType(value, Any));\n\t\t\t// trace('----> String ----> ' + Std.isOfType(value, String));\n\t\t\t// trace('----> Bool ----> ' + Std.isOfType(value, Bool));\n\t\t\t// trace('----> x ----> ' + js.Syntax.typeof(value));\n\t\t\t// trace('----> y ----> ' + js.Syntax.typeof(value) == 'string');\n\n\t\t\t// try {\n\t\t\t// \ttrace(value.length);\n\t\t\t// } catch (e) {\n\t\t\t// \ttrace('not array');\n\t\t\t// }\n\t\t}\n\n\t\t// for (i in Json.parse(json)) {\n\t\t// \ttrace(i);\n\t\t// }\n\t\treturn res;\n\t}\n\n\t/**\n\t * sanitize string to prefend XSS attack\n\t *\n\t * @example\n\t * \t\tutils.Sanitize.sanitizeHTML('<img src=\"x\" onerror=\"alert(1)\">');\n\t *\n\t * @param unsafe_str\n\t * @return String\n\t */\n\tpublic static function sanitizeHTML(unsafe_str:String):String {\n\t\t// make sure we clean once, not continues.\n\t\tif (unsafe_str.indexOf('&amp;') != -1)\n\t\t\tunsafe_str.replace('&', '&amp;');\n\t\treturn unsafe_str\n\t\t\t.replace('<', '&lt;')\n\t\t\t.replace('>', '&gt;')\n\t\t\t.replace('\"', '&quot;')\n\t\t\t.replace(\"'\", '&#39;'); // '&apos;' is not valid HTML 4\n\t}\n\n\t/**\n\t * \t@example\n\t * \t\tutils.Sanitize.escapeHTML('<img src=\"x\" onerror=\"alert(1)\">');\n\t * @param unsafe_str\n\t * @return String\n\t */\n\tpublic static function escapeHTML(unsafe_str:String):String {\n\t\treturn sanitizeHTML(unsafe_str);\n\t}\n}\n"],
"names":[],
"mappings":"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"
}