{
"version":3,
"file":"monkee_chain_lite.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/GIT/monkee-z/src/MonkeeChainLite.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport haxe.Json;\nimport js.lib.Function;\nimport js.html.SupportedType;\nimport js.html.DOMParser;\nimport js.lib.Error;\nimport js.html.Element;\nimport haxe.extern.EitherType;\nimport js.Browser.*;\n\nusing StringTools;\n\n@:expose\nclass MonkeeChainLite {\n\tvar DEBUG = true;\n\tvar targetName:String = '';\n\tvar target:Element = null;\n\tvar data:Dynamic = {};\n\tvar template:String = null;\n\n\t/**\n\t * [Description]\n\t * @param target\n\t * @param obj\n\t */\n\tpublic function new(target:EitherType<String, Element>, obj:MonkeeChainObj) {\n\t\tif (DEBUG)\n\t\t\tconsole.info(App.callIn('MonkeeChainLite'));\n\n\t\t// convert data to an element if needed\n\t\tif (Std.is(target, String)) {\n\t\t\tthis.targetName = target;\n\t\t\tthis.target = document.querySelector(target);\n\n\t\t\t// trace(this.target);\n\t\t} else {\n\t\t\tthis.targetName = untyped target.id;\n\t\t\tthis.target = target;\n\t\t}\n\n\t\tif (this.target == null) {\n\t\t\tconsole.error('Target \"${this.targetName}\" possibly not correct target/no element');\n\t\t\treturn;\n\t\t\t// } else {\n\t\t\t// \t// visual check\n\t\t\t// \tthis.target.dataset.monkee = 'set';\n\t\t\t// \tthis.target.innerText = 'x ${this.targetName} set';\n\t\t}\n\n\t\tif (obj.data != null && obj.data != {}) {\n\t\t\t// trace(obj.data);\n\t\t\tthis.data = obj.data;\n\t\t\t// } else {\n\t\t\t// \tconsole.error('Element \"${this.targetName}\" has no data: ${Json.stringify(obj.data)}');\n\t\t\t// \tthis.data = {};\n\t\t}\n\n\t\tif (obj.template != null && obj.template != '') {\n\t\t\t// trace(obj.template);\n\t\t\tthis.template = obj.template;\n\t\t} else {\n\t\t\tconsole.error('Element \"${this.targetName}\" has template: ${Json.stringify(obj.template)}');\n\t\t}\n\n\t\trender();\n\t}\n\n\tpublic function render() {\n\t\t// if (DEBUG)\n\t\t// \tconsole.info(App.callIn('RENDER()'));\n\n\t\tif (Std.is(this.template, String)) {\n\t\t\tthis.target.innerHTML = (this.template);\n\t\t} else {\n\t\t\t// this.target.innerHTML = cast(this.template, Function).call(this, this.data);\n\t\t\tthis.target.innerHTML = untyped (this.template).call(this, this.data);\n\t\t}\n\t}\n\t/**\n\t * Convert a template string into HTML DOM nodes\n\t * @param  {String} str The template string\n\t * @return {Node}       The template HTML\n\t */\n\t// public function stringToHTML(str:String):Element {\n\t// \tvar parser = new DOMParser();\n\t// \tvar doc = parser.parseFromString(str, SupportedType.TEXT_HTML);\n\t// \treturn doc.body;\n\t// };\n}\n\ntypedef MonkeeChainObj = {\n\t@:optional var _id:String;\n\tvar data:Dynamic;\n\tvar template:EitherType<String, Function>;\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";;;yBAcA;AAAA,EAKuB,AAAtB,gBAAsB;AALvB,EAIoB,AAAnB,YAAmB;AAJpB,EAGsB,AAArB,cAAqB;AAHtB,EAEyB,AAAxB,kBAAwB;AAFzB,EACa,AAAZ,aAAY;AADb,EAaE,EAAI,aACH;AAAA,wBAAa,qBAAY,oBAAZ;AAAb;AAdH,EAiBE,EAAI,QAAO,WAAP,UAAwB;AAAA,GAC3B,kBAAkB;AADS,GAE3B,cAAc,8BAAuB;AAFV,SAKrB;AAAA,GACN,kBAA0B;AADpB,GAEN,cAAc;AAFR;AAtBT,EA2BE,EAAI,gBAAe,MAAM;AAAA,GACxB,sBAAe,cAAU,kBAAgB;AADjB,GAExB;AAFwB;AA3B3B,EAoCE,EAAI,aAAY,QAAQ,YAAY,KAEnC;AAAA,eAAY;AAAZ;AAtCH,EA4CE,EAAI,iBAAgB,QAAQ,gBAAgB,IAE3C;AAAA,mBAAgB;AAAhB,SAEA;AAAA,yBAAe,eAAW,kBAAgB,sBAAkB,eAAe;AAA3E;AAhDH,EAmDE;AAnDF;UA0DE;AAAA,IAAI,QAAO,kBAAP,UACH;AAAA,2BAAwB,AAAC;AAAzB,SAGA;AAAA,2BAAgC,AAAC,mBAAoB,KAAM;AAA3D;AAJD;;;;oBC7CF;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;;"
}