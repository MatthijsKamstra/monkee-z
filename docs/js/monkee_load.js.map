{
"version":3,
"file":"monkee_load.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/GIT/monkee-z/src/MonkeeLoad.hx","/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx","/Users/matthijs/Documents/GIT/monkee-z/src/utils/Html.hx"],
"sourcesContent":["package;\n\nimport utils.Html;\nimport js.html.InputElement;\nimport haxe.Json;\nimport js.html.Element;\nimport js.Browser.*;\nimport js.html.XMLHttpRequest;\nimport AST.LoadObj;\n\nclass MonkeeLoad {\n\tvar DEBUG = true;\n\n\t// do we need this?\n\t// var config = {\n\t// \tinner: 'data-load-inner', // inner\n\t// \touter: 'data-load', // outer\n\t// \treplace: 'data-load-replace' // outer\n\t// }\n\tvar arr = ['data-load', 'data-load-replace', 'data-load-inner'];\n\tvar req = new XMLHttpRequest();\n\tvar loadingArr:Array<LoadObj> = [];\n\tvar loadingId = 0;\n\n\tpublic function new() {\n\t\t// if (DEBUG)\n\t\t// \tconsole.info(App.callIn('MonkeeLoad lite'));\n\n\t\tfor (i in 0...arr.length) {\n\t\t\tvar _configName = arr[i];\n\t\t\tvar elements = document.querySelectorAll('[${_configName}]');\n\t\t\tfor (i in 0...elements.length) {\n\t\t\t\tvar wrapper:Element = cast elements[i];\n\t\t\t\tvar url = wrapper.getAttribute(_configName);\n\t\t\t\tloadingArr.push({\n\t\t\t\t\tel: wrapper,\n\t\t\t\t\turl: url,\n\t\t\t\t\tloaderType: ('data-load-inner' == _configName) ? 'inner' : 'outer'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tstartLoading(loadingId);\n\t}\n\n\tfunction startLoading(nr:Int) {\n\t\tif (nr >= loadingArr.length) {\n\t\t\treturn;\n\t\t}\n\t\tloadData(loadingArr[nr]);\n\t\tloadingId++;\n\t}\n\n\tfunction loadData(obj:LoadObj) {\n\t\treq.open('GET', obj.url);\n\t\treq.onload = function() {\n\t\t\t// make it smaller, by assuming files are without html\n\t\t\tvar body = (req.response);\n\t\t\tHtml.processHTML(obj.el, body, obj.loaderType == 'inner');\n\t\t\t// load the next\n\t\t\tstartLoading(loadingId);\n\t\t};\n\n\t\treq.onerror = function(error) {\n\t\t\t// if (DEBUG)\n\t\t\tconsole.error('error: $error');\n\t\t};\n\n\t\treq.send();\n\t}\n\n\tstatic public function main() {\n\t\tdocument.addEventListener('DOMContentLoaded', (event) -> {\n\t\t\tvar app = new MonkeeLoad();\n\t\t});\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","package utils;\n\nimport js.html.Element;\nimport js.Browser.*;\nimport js.html.XMLHttpRequest;\n\nclass Html {\n\tpublic function new() {\n\t\t// your code\n\t}\n\n\t/**\n\t * extract the body (from documents that have a body)\n\t *\n\t * @param html\n\t */\n\tpublic static function getBody(html) {\n\t\tvar test:String = html.toLowerCase(); // to eliminate case sensitivity\n\t\tvar x:Int = test.indexOf(\"<body\");\n\t\tif (x == -1)\n\t\t\treturn \"\";\n\n\t\tx = test.indexOf(\">\", x);\n\t\tif (x == -1)\n\t\t\treturn \"\";\n\t\tvar y = test.lastIndexOf(\"</body>\");\n\t\tif (y == -1)\n\t\t\ty = test.lastIndexOf(\"</html>\");\n\t\tif (y == -1)\n\t\t\ty = html.length; // If no HTML then just grab everything till end\n\t\treturn html.slice(x + 1, y);\n\t}\n\n\t/**\n\t * [Description]\n\t * @param target\n\t * @param html\n\t * @param isInner\n\t */\n\tpublic static function processHTML(target:js.html.Element, html:String, isInner:Bool) {\n\t\tif (isInner) {\n\t\t\ttarget.innerHTML = html;\n\t\t} else {\n\t\t\ttarget.outerHTML = html;\n\t\t}\n\t}\n\n\t/**\n\t * [Description]\n\t * @param html\n\t * @param isInner = true\n\t */\n\tpublic static function htmlToElement(html:String, isInner = true) {\n\t\tvar template = document.createDivElement();\n\t\thtml = untyped html.trim(); // Never return a text node of whitespace as the result\n\t\tHtml.processHTML(template, html, isInner);\n\t\t// template.innerHTML = html;\n\t\treturn template.firstChild;\n\t}\n}\n"],
"names":[],
"mappings":";;;eAUA;AAAA,EAYiB,AAAhB,iBAAgB;AAZjB,EAWiC,AAAhC,kBAAgC;AAXjC,EAUW,AAAV,WAAU;AAVX,EASW,AAAV,WAAU,CAAE,YAAa,oBAAqB;AAT/C,EAkBY;AAlBZ,EAkBgB;AAlBhB,EAkBE,KAAK,CAAK,KAAI,KAAd;AAAA,GAAU;AAAV,GACC,kBAAkB,SAAI;AADvB,GAEC,eAAe,iCAA2B,MAAG,cAAY;AAF1D,GAGW;AAHX,GAGe;AAHf,GAGC,KAAK,CAAK,MAAI,KAAd;AAAA,IAAU;AAAV,IACC,cAAsB,AAAK,SAAS;AADrC,IAEC,UAAU,qBAAqB;AAFhC,IAGC,qBAAgB,OACX,eACC,kBACO,AAAE,qBAAoB,cAAgB,UAAU;AAN9D;AAHD;AAlBF,EA+BE,kBAAa;AA/Bf;kBAkC+B;AAAA,EAC7B,EAAI,OAAM,wBACT;AAAA;AAAA;AAF4B,EAI7B,cAAS,gBAAW;AAJS,EAK7B;AAL6B;eAQC;AAAA,EAA/B;AAA+B,EAC9B,cAAU,MAAM;AADc,EAE9B,kBAAa,WAAW;AAAA,GAEvB,WAAW,AAAC;AAFW,GAGvB,uBAAiB,OAAQ,KAAM,kBAAmB;AAH3B,GAKvB,oBAAa;AALU;AAFM,EAU9B,mBAAc,gBAEb;AAAA,yBAAe,YAAQ;AAAvB;AAZ6B,EAe9B;AAf8B;eAmB9B;AAAA,mCAA2B,mBAAmB,gBAC7C;AAAA,aAAU;AAAV;AADD;;;oBC5CF;AAAA,EAEmB,AAAlB,eAAkB;AAFnB,EASE,aAAa;AATf;WAiBE;AAAA,SAAO,eAAU;AAAjB;QAQA;AAAA,SAAO,WAAM;AAAb;;;yCCZA;AAAA,IAAI,UACH;AAAA,sBAAmB;AAAnB,SAEA;AAAA,sBAAmB;AAAnB;AAHD;;;;;"
}