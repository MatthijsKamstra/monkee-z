// Generated by Haxe 4.1.5
(function ($global) { "use strict";
class Reflect {
	static getProperty(o,field) {
		let tmp;
		if(o == null) {
			return null;
		} else {
			let tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				return o[tmp]();
			} else {
				return o[field];
			}
		}
	}
}
class Research {
	constructor() {
		console.log("src/Research.hx:14:","Research");
		this.proxi6();
	}
	render() {
		console.log("src/Research.hx:86:","<< render >>");
	}
	proxi6() {
		console.log("src/Research.hx:94:",">> proxi 6");
		let target = { stringVal : "hello", boolVal : true, objVal : { }, arrayVal : ["one"]};
		let _gthis = this;
		let proxi6Handler = { get : function(target,property,receiver) {
			console.log("src/Research.hx:104:","\n\t---> GET: \"" + property + "\"");
			return Reflect.getProperty(target,property);
		}, defineProperty : function(target,property,descriptor) {
			console.log("src/Research.hx:117:","\n\t---> defineProperty: \"" + property + "\": " + JSON.stringify(descriptor));
			target[property] = descriptor.value;
			_gthis.render();
			return true;
		}};
		let data = new Proxy(target,proxi6Handler);
		$global.console.log("-----------");
		$global.console.log(data);
		$global.console.log(data.stringVal);
		$global.console.log(data.stringVal = "hi");
		$global.console.log(" <<--- should render");
		$global.console.log(data.stringVal);
		$global.console.log("-----------");
		$global.console.log(data);
		$global.console.log(data.objVal);
		$global.console.log(data.objVal = { number : "1"});
		$global.console.log(" <<--- should render");
		$global.console.log(data.objVal);
		$global.console.log(data.objVal.number);
		$global.console.log("-----------");
		$global.console.log(data);
		$global.console.log(data.newObj);
		$global.console.log(data.newObj = { });
		$global.console.log(" <<--- should render");
		$global.console.log(data.newObj);
		$global.console.log(data.newObj = { "one" : "1"});
		$global.console.log(" <<--- should render");
		$global.console.log(data.newObj);
		$global.console.log(data.arrayVal);
		$global.console.log(data.arrayVal.push("x"));
		$global.console.log(" <<--- should render");
		$global.console.log(data.arrayVal);
		$global.console.log("-----------");
		$global.console.log(data);
	}
	static main() {
		new Research();
	}
}
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
Research.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
