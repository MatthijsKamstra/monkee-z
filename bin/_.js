// Generated by Haxe 4.1.5
(function ($global) { "use strict";
class Research {
	constructor() {
		console.log("src/Research.hx:14:","Research");
		this.proxi4();
	}
	onChange() {
		console.log("src/Research.hx:31:","{{{onChange}}}");
	}
	proxi4() {
		console.log("src/Research.hx:51:",">> proxi 4");
		let target = { message1 : "hello", message2 : "everyone", data : { }};
		let _gthis = this;
		let handler = { get : function(target,property,receiver) {
			try {
				return new Proxy(target[property],this.handler);
			} catch( _g ) {
				return Reflect.get(target,property,receiver);
			}
		}, defineProperty : function(target,property,descriptor) {
			_gthis.onChange();
			return Reflect.defineProperty(target,property,descriptor);
		}, deleteProperty : function(target,property) {
			_gthis.onChange();
			return Reflect.deleteProperty(target,property);
		}};
		let proxy = new Proxy(target,handler);
		$global.console.log(proxy.message1);
		$global.console.log(proxy.message2);
		proxy.message1 = "hi";
		$global.console.log(proxy.message1);
		$global.console.log(proxy.data.one);
		proxy.data.one = "2";
		$global.console.log(proxy.data.one);
	}
	static main() {
		new Research();
	}
}
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
Research.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
